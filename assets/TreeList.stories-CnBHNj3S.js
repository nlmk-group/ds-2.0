import{j as e}from"./jsx-runtime-BTJTZTIL.js";import{r as N}from"./index-BcJSXhQi.js";import{B as d,aU as r}from"./TreeList-BgNZ17Gs.js";import"./generateUUID-CJxgi7Ha.js";import"./index-BG4omi31.js";import"./index-WHoiTdKD.js";import{B as R}from"./index-D-jyRV5V.js";import"./index-D8WlRtvM.js";import"./index-DmffzHLE.js";import"./index-DcXliXrs.js";import"./index-VmJK6twV.js";import"./index-DxgC_uyg.js";import"./index-t2lirjGB.js";import"./index-C5rKoyII.js";import{z as B,O as C}from"./32-BpMTv1cT.js";import"./index-ChsGqxH_.js";import"./clsx-B-dksMZM.js";import"./index-BevFGyV5.js";import"./index-DdXvKv-Q.js";import"./types-CpBSVUgC.js";import"./tiny-invariant-CopsF_GD.js";import"./index-CRm92gKC.js";const U="_wrapper_6a0kf_1",F={wrapper:U},O=()=>e.jsxs("div",{style:{display:"flex",gap:12},children:[e.jsx(d,{type:"button",onClick:()=>console.log("Edit"),iconButton:e.jsx(B,{}),variant:"secondary",color:"ghost",size:"s",title:"Edit"}),e.jsx(d,{type:"button",onClick:()=>console.log("Delete"),iconButton:e.jsx(C,{}),variant:"secondary",color:"ghost",size:"s",title:"Delete"})]}),a=[{key:"0-0",title:"Производство стали",rightSideControls:e.jsx(O,{}),children:[{key:"0-0-0",title:"Конвертерный цех",children:[{key:"0-0-0-0",title:"Конвертер №1",children:[]},{key:"0-0-0-1",title:"Конвертер №2"},{key:"0-0-0-2",title:"МНЛЗ №3"}]},{key:"0-0-1",title:"Электросталеплавильный цех",children:[{key:"0-0-1-0",title:"ДСП №1"},{key:"0-0-1-1",title:"МНЛЗ №4"}]}]},{key:"0-1",title:"Прокатное производство",children:[{key:"0-1-0",title:"Цех горячей прокатки",children:[{key:"0-1-0-0",title:"Стан 2000"},{key:"0-1-0-1",title:"Нагревательные печи"}]},{key:"0-1-1",title:"Цех холодной прокатки",children:[{key:"0-1-1-0",title:"Стан 1400"},{key:"0-1-1-1",title:"Травильная линия"}]}]},{key:"0-2",title:"Вспомогательное производство",children:[{key:"0-2-0",title:"Кислородный цех"},{key:"0-2-1",title:"Энергетический цех"}]}],X=l=>e.jsx("div",{className:F.wrapper,children:e.jsx(l,{})}),ce={title:"Components/TreeList/Stories",component:r,decorators:[X],parameters:{actions:{argTypesRegex:"^on.*"}}},o=l=>{const[A,w]=N.useState(a),j=t=>{console.log("SelectedNodeEvent: ",t)},_=t=>{console.log("onDataAfterDrag: ",t),w(t)},f=t=>{console.log("Drag start event: ",t.event)},H=t=>{console.log("Drag end event; ",t.event)};return e.jsx(r,{data:A,checkable:l.checkable,draggable:l.draggable,rowHeight:l.rowHeight,onSelectedNode:j,onDataAfterDrag:_,onDragStart:f,onDragEnd:H})};o.args={checkable:!0,draggable:!0,rowHeight:"s"};o.parameters={controls:{disable:!0},previewTabs:{controls:{hidden:!0}}};o.storyName="TreeList по умолчанию";const s=()=>e.jsx(r,{data:a,checkable:!0,rowHeight:"s"});s.storyName="TreeList только с чекбоксами";s.parameters={controls:{disable:!0},previewTabs:{controls:{hidden:!0}}};const n=()=>e.jsx(r,{data:a,draggable:!0,rowHeight:"s"});n.storyName="TreeList с drag-n-drop";n.parameters={controls:{disable:!0},previewTabs:{controls:{hidden:!0}}};const i=()=>e.jsx(r,{data:a,checkableSimple:!0,rowHeight:"s"});i.storyName="TreeList с простыми чекбоксами";i.parameters={controls:{disable:!0},previewTabs:{controls:{hidden:!0}}};const c=()=>e.jsxs(R,{flexDirection:"column",gap:"20px",children:[e.jsxs("div",{children:[e.jsx("h4",{children:"Размер XS"}),e.jsx(r,{data:a,checkable:!0,rowHeight:"xs"})]}),e.jsxs("div",{children:[e.jsx("h4",{children:"Размер S"}),e.jsx(r,{data:a,checkable:!0,rowHeight:"s"})]}),e.jsxs("div",{children:[e.jsx("h4",{children:"Размер M"}),e.jsx(r,{data:a,checkable:!0,rowHeight:"m"})]})]});c.storyName="TreeList с разными размерами строк";c.parameters={controls:{disable:!0},previewTabs:{controls:{hidden:!0}}};var p,g,m;o.parameters={...o.parameters,docs:{...(p=o.parameters)==null?void 0:p.docs,source:{originalSource:`(argTypes: TTreeListProps): JSX.Element => {
  const [data, setData] = useState(DEFAULT_TREE_DATA);
  const onSelectedNode = (e: TSelectedNodeEvent) => {
    console.log('SelectedNodeEvent: ', e);
  };
  const onDataAfterDrag = (newData: TNodeItem[]) => {
    console.log('onDataAfterDrag: ', newData);
    setData(newData);
  };
  const onDragStart = (e: TDragEvent) => {
    console.log('Drag start event: ', e.event);
  };
  const onDragEnd = (e: TDragEvent) => {
    console.log('Drag end event; ', e.event);
  };
  return <TreeList data={data} checkable={argTypes.checkable} draggable={argTypes.draggable} rowHeight={argTypes.rowHeight} onSelectedNode={onSelectedNode} onDataAfterDrag={onDataAfterDrag} onDragStart={onDragStart} onDragEnd={onDragEnd} />;
}`,...(m=(g=o.parameters)==null?void 0:g.docs)==null?void 0:m.source}}};var h,T,D;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:'(): JSX.Element => <TreeList data={DEFAULT_TREE_DATA} checkable rowHeight="s" />',...(D=(T=s.parameters)==null?void 0:T.docs)==null?void 0:D.source}}};var u,E,b;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:'(): JSX.Element => <TreeList data={DEFAULT_TREE_DATA} draggable rowHeight="s" />',...(b=(E=n.parameters)==null?void 0:E.docs)==null?void 0:b.source}}};var k,x,y;i.parameters={...i.parameters,docs:{...(k=i.parameters)==null?void 0:k.docs,source:{originalSource:'(): JSX.Element => <TreeList data={DEFAULT_TREE_DATA} checkableSimple rowHeight="s" />',...(y=(x=i.parameters)==null?void 0:x.docs)==null?void 0:y.source}}};var S,L,v;c.parameters={...c.parameters,docs:{...(S=c.parameters)==null?void 0:S.docs,source:{originalSource:`(): JSX.Element => <Box flexDirection="column" gap="20px">
    <div>
      <h4>Размер XS</h4>
      <TreeList data={DEFAULT_TREE_DATA} checkable rowHeight="xs" />
    </div>
    <div>
      <h4>Размер S</h4>
      <TreeList data={DEFAULT_TREE_DATA} checkable rowHeight="s" />
    </div>
    <div>
      <h4>Размер M</h4>
      <TreeList data={DEFAULT_TREE_DATA} checkable rowHeight="m" />
    </div>
  </Box>`,...(v=(L=c.parameters)==null?void 0:L.docs)==null?void 0:v.source}}};const le=["TreeListDefault","TreeListCheckableOnly","TreeListDraggableOnly","TreeListSimpleCheckboxes","TreeListSizes"];export{s as TreeListCheckableOnly,o as TreeListDefault,n as TreeListDraggableOnly,i as TreeListSimpleCheckboxes,c as TreeListSizes,le as __namedExportsOrder,ce as default};
