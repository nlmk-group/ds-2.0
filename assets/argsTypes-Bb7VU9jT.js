import{j as e}from"./jsx-runtime-BTJTZTIL.js";import{l as t}from"./TreeList-BLZWONv9.js";import{s as o}from"./index-D8WlRtvM.js";import"./index-BcJSXhQi.js";import"./generateUUID-Cm0X4XRy.js";import"./index-cHpEh_mw.js";import"./index-WHoiTdKD.js";import"./index-D-jyRV5V.js";import"./index-DmffzHLE.js";import"./index-CQem5UP1.js";import"./index-VmJK6twV.js";import"./index-DxgC_uyg.js";import"./index-bO57duG5.js";import"./index-C5rKoyII.js";import{j as l,i as r,k as n}from"./32-CkUgnIrf.js";const a={IconSearchOutlined32:e.jsx(n,{}),IconSearchOutlined24:e.jsx(r,{}),IconSearchOutlined16:e.jsx(l,{})},V={onBlur:{description:"Callback, который будет вызван при изменении значения внутри input, используйте для логики валидации или других действий при потере фокуса",action:"изменено value"},onChange:{description:"Callback, который будет вызван при изменении значения внутри input",action:"изменено value"},onReset:{description:"Callback, который будет вызван при клике по иконке сброса",action:"изменено value"},reset:{description:"Булевое значение для показа иконки сброса",control:{type:"boolean"},table:{defaultValue:{summary:"false"}}},value:{description:"Значение поля input",control:{type:"text"},table:{type:{summary:"string"}}},helperText:{description:"Строка для вспомогательно текста под инпутом. Может быть как текстом, так и элементом ReactNode",control:{type:"text"}},icon:{description:"Элемент с иконкой, который располагается с правой стороны инпута.",table:{defaultValue:{summary:""},type:{summary:"ReactNode"}},options:Object.keys(a),control:{type:"select"},mapping:a},size:{description:"Свойство, позволяющее регулировать высоту инпута",table:{defaultValue:{summary:o.m}},options:Object.values(o),control:{type:"select"}},required:{description:"Атрибут, который указывает, что данное поле является обязательным для заполнения",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},disabled:{description:"Условие блокировки input для ввода/изменений",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},color:{description:"Цвет компонента, отображающий разные состояния",table:{defaultValue:{summary:t.default}},options:Object.values(t),control:{type:"select"}},multiline:{description:"Свойство, позволяющее сделать компонент многострочным (как TextArea)",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},resize:{description:"Свойство, позволяющее изменять размер многострочного компонента (TextArea). Работает только со свойством multiline.",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},id:{description:"Идентификатор компонента",control:{type:"text"}},colored:{description:"Свойство, позволяющее изменить цвет фона инпута на светло-желтый",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},inputRef:{description:"Ref для доступа к DOM-элементу инпута",table:{type:{summary:"Ref<HTMLInputElement | HTMLTextAreaElement>"}}},name:{description:"Имя инпута, используется для идентификации в формах",control:{type:"text"}},label:{description:"Текст метки (label) инпута",control:{type:"text"}},placeholder:{description:"Текст плейсхолдера. Отображается при фокусе, если есть label, или всегда, если label отсутствует",control:{type:"text"}},className:{description:"Дополнительный CSS класс для обертки инпута",control:{type:"text"}},pseudo:{description:"Свойство, позволяющее отображать компонент как PseudoInput (не редактируемое поле)",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},pseudoInputStyle:{description:"Инлайн стили для PseudoInput режима. Работает только при pseudo={true}",table:{type:{summary:"CSSProperties"}},control:{type:"object"}}};export{V as a};
