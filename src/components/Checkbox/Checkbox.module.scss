$checkbox-size: 18px;
$checkbox-icon-size: 14px;
// FIXME: --32-size removed not replaced
$checkbox-focus-size: 32px;

$checkbox-colors: (
  brand: (
    border: var(--steel-60),
    border-checked: var(--brand-sapphire-60),
    background: var(--brand-sapphire-60),
  ),
  error: (
    border: var(--spectrum-red-50),
    border-checked: var(--spectrum-red-50),
    background: var(--spectrum-red-50),
  ),
  warning: (
    border: var(--spectrum-yellow-50),
    border-checked: var(--spectrum-yellow-50),
    background: var(--spectrum-yellow-50),
  ),
  success: (
    border: var(--spectrum-green-50),
    border-checked: var(--spectrum-green-50),
    background: var(--spectrum-green-50),
  )
);

.label {
  display: flex;
  align-items: center;
  cursor: pointer;
  position: relative;
  width: fit-content;
  z-index: 1;
  border-radius: 4px;

  // Подсветка для измененных значений
  &.colored {
    background-color: var(--spectrum-yellow-10);
  }
  // disabled состояние
  &:has(input:disabled) {
    cursor: default;
    opacity: 0.5;
  }

  // Круг при ховере
  &:not(:has(input:disabled)) {
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 16px;
      transform: translate(-50%, -50%);
      width: $checkbox-focus-size;
      height: $checkbox-focus-size;
      border-radius: 50%;
      opacity: 0;
      transition: opacity 0.15s ease-in-out;
      pointer-events: none;
      z-index: -1;
      background-color: var(--steel-90);
    }

    // Круг при ховере
    &:hover::after {
      opacity: 0.06;
    }
  }
}

.wrapper {
  width: $checkbox-focus-size;
  height: $checkbox-focus-size;
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
}

.checkbox {
  appearance: none;
  -webkit-appearance: none;
  margin: 0;
  width: $checkbox-size;
  height: $checkbox-size;
  border: 2px solid;
  border-radius: 2px;
  cursor: pointer;
  position: relative;
  transition: all 0.15s ease-in-out;

  // Генерация стилей для разных цветовых вариантов
  @each $color, $values in $checkbox-colors {
    &[data-color="#{$color}"] {
      border-color: map-get($values, border);
      background-color: var(--steel-10);

      // Отмеченное состояние
      &:checked {
        background-color: map-get($values, background);
        border-color: map-get($values, border-checked);

        ~ .checkmark {
          opacity: 1;
        }
      }

      // Состояние disabled
      &:disabled {
        cursor: default;
        border-color: map-get($values, border);

        &:checked {
          background-color: map-get($values, background);
          border: none;
        }
      }
    }
  }
}

.checkmark {
  position: absolute;
  left: 7px;
  top: 7px;
  width: $checkbox-size;
  height: $checkbox-size;
  border-radius: 2px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  z-index: 10;
  pointer-events: none;
  transition: opacity 0.15s ease-in-out;

  svg {
    width: $checkbox-icon-size;
    height: $checkbox-icon-size;
    color: var(--unique-white);
  }
}

.text {
  padding: 5px;
}
