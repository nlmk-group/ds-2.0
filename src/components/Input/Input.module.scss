input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px white inset !important;
  -webkit-text-fill-color: var(--steel-90) !important;
  transition: background-color 5000s ease-in-out 0s;
}

input:-moz-autofill,
input:-moz-autofill:hover,
input:-moz-autofill:focus {
  background-color: white !important;
  color: var(--steel-90) !important;
}

input:autofill,
input:autofill:hover,
input:autofill:focus {
  background-color: white !important;
  -webkit-text-fill-color: var(--steel-90) !important;
  box-shadow: 0 0 0 30px white inset !important;
}

@mixin input-color-states {
  &.error {
    color: var(--spectrum-red-60);
  }

  &.warning {
    color: var(--spectrum-yellow-60);
  }

  &.success {
    color: var(--spectrum-green-60);
  }
}

@mixin input-border-color-states {
  &.error {
    border-color: var(--spectrum-red-60);
    background-color: var(--steel-10);
  }

  &.warning {
    border-color: var(--spectrum-yellow-60);
    background-color: var(--steel-10);
  }

  &.success {
    border-color: var(--spectrum-green-60);
    background-color: var(--steel-10);
  }
}

@mixin font-styles {
  font-size: var(--body1-medium-16-fontSize);
  font-weight: var(--body1-medium-16-fontWeight);
  line-height: var(--body1-medium-16-lineHeight);
  letter-spacing: var(--body1-medium-16-letterSpacing);
  text-decoration: var(--body1-medium-16-textDecoration);
}

.input {
  font-family: var(--font-families-pt-root-ui);
  // Стиль для textarea чтобы убрать пробелы снизу для helperText
  font-size: 0;
  position: relative;

  &:hover {
    .textfield:not(:disabled):not(:focus) {
      border-color: var(--steel-80);
      @include input-border-color-states;
    }
  }

  // Стили для "плавающего" лейбла
  input:focus ~ label,
  textarea:focus ~ label,
  input:not(:placeholder-shown):not(:focus) ~ label,
  textarea:not(:placeholder-shown):not(:focus) ~ label {
    top: -9px;
    left: 12px;
    padding: 0 4px;
    // Создаем эффект "разрыва" границы инпута для лейбла
    background: linear-gradient(to top, var(--steel-10) 50%, transparent 50%);
  }

  input,
  textarea {
    &::placeholder {
      color: var(--steel-70);
      opacity: 1;
    }
  }

  // Скрываем плейсхолдер когда:
  // 1. Есть label (:has(label))
  // 2. Есть input который:
  //    - не в фокусе (not(:focus))
  //    - показывает плейсхолдер (placeholder-shown)
  &:has(label):has(input:not(:focus):placeholder-shown) input::placeholder {
    opacity: 0;
  }

  // Стили для лейбла при colored=true
  &.colored {
    input:focus ~ label,
    textarea:focus ~ label,
    input:not(:placeholder-shown):not(:focus) ~ label,
    textarea:not(:placeholder-shown):not(:focus) ~ label {
      background: linear-gradient(to top, var(--spectrum-yellow-10) 50%, transparent 50%);
    }
  }

  // Стили для лейбла в фокусе
  input:focus ~ label,
  textarea:focus ~ label {
    color: var(--brand-sapphire-60);
    @include input-color-states;
  }

  // Стили для лейбла при отключенном инпуте
  input:not(:placeholder-shown):not(:focus):disabled ~ label,
  textarea:not(:placeholder-shown):not(:focus):disabled ~ label {
    background: linear-gradient(to top, var(--steel-30) 50%, transparent 50%);
  }
}

.textfield {
  width: 100%;
  height: 40px;
  color: var(--steel-90);
  box-sizing: border-box;
  font-family: inherit;
  @include font-styles;
  border-radius: 4px;
  z-index: 2;
  border: 1px solid var(--steel-50);
  outline: none;
  background: var(--steel-10);
  font-variant-numeric: tabular-nums lining-nums;
  padding: 0 8px 0 16px;
  @include input-border-color-states;

  &::placeholder {
    @include font-styles;
    color: var(--steel-70);
  }

  &--with-icon {
    padding-right: 32px; // 24px + 8px
  }

  &--with-reset {
    padding-right: 32px; // 24px + 8px
  }

  &--with-icons {
    padding-right: 60px; // 24px + 8px + 24px + 4px
  }

  &.compact {
    height: 32px;

    ~ label {
      padding: 5px 16px;
    }

    ~ .icon {
      height: 24px;
    }
  }

  &.extra-compact {
    height: 28px;

    ~ label {
      padding: 4px 16px;
    }

    ~ .icon {
      height: 16px;
      padding-top: 2px;
    }
  }

  &:disabled {
    border-color: var(--steel-50);
    background-color: var(--steel-30);
    -webkit-text-fill-color: var(--steel-70);
    color: var(--steel-70);
    pointer-events: none;
    cursor: default;
  }

  &:focus {
    border-color: var(--brand-sapphire-60);

    @include input-border-color-states;
  }
}

.textarea {
  min-height: 80px;
  display: inline-block;
  overflow: auto;
  resize: none;
  padding-top: 8px;
  padding-bottom: 8px;

  &--with-reset {
    padding-right: 32px;
  }

  &.resize {
    resize: both;
  }

  ::-webkit-resizer {
    display: none;
  }

  &-reset {
    position: absolute;
    top: 8px;
    right: 8px;
  }
}

.label {
  position: absolute;
  padding: 10px 0;
  left: 16px;
  top: 0;
  color: var(--steel-70);
  cursor: text;
  transition: 150ms ease-out;
  max-width: calc(100% - 32px);
  white-space: nowrap;

  @include input-color-states;

  .typography {
    margin: 0;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.icon {
  position: absolute;
  top: 4px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--brand-sapphire-60);
  background: transparent;
  right: 8px;
  cursor: text;
  @include input-color-states;

  input:disabled ~ &,
  textarea:disabled ~ & {
    color: var(--steel-70);
    pointer-events: none;
  }
}

.reset {
  cursor: pointer;
  pointer-events: auto;
  right: 8px;

  &--with-icon {
    right: 36px;
  }
}

.helper {
  display: flex;
  margin: 0;
  padding-top: 4px;
  padding-left: 16px;
  color: var(--steel-70);
  @include input-color-states;
}

.colored {
  &.textfield,
  &.textarea {
    background-color: var(--spectrum-yellow-10) !important;
  }
}
