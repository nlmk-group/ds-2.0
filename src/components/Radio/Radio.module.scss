$radio-wrapper-size: 32px;
$radio-circle-size: 20px;
$radio-dot-size: 10px;

$radio-colors: (
  brand: (
    border: var(--steel-60),
    border-checked: var(--brand-sapphire-60),
    hover-checked: var(--brand-sapphire-60),
    dot: var(--brand-sapphire-60)
  ),
  error: (
    border: var(--spectrum-red-50),
    border-checked: var(--spectrum-red-50),
    hover-checked: var(--spectrum-red-50),
    dot: var(--spectrum-red-50)
  ),
  warning: (
    border: var(--spectrum-yellow-50),
    border-checked: var(--spectrum-yellow-50),
    hover-checked: var(--spectrum-yellow-50),
    dot: var(--spectrum-yellow-50)
  ),
  success: (
    border: var(--spectrum-green-50),
    border-checked: var(--spectrum-green-50),
    hover-checked: var(--spectrum-green-50),
    dot: var(--spectrum-green-50)
  )
);

.radio {
  display: flex;

  // Миксин для установки размеров круга радио-кнопки
  @mixin radio-circle($size) {
    width: $size;
    height: $size;
    border-radius: 50%;
    box-sizing: border-box;
  }

  // Базовые стили для input[type="radio"]
  input[type="radio"] {
    @include radio-circle($radio-wrapper-size);
    appearance: none;
    padding: 4px;
    margin: 0;
    cursor: pointer;
    background: transparent;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    // Внешний круг радио-кнопки (граница)
    &:before {
      content: "";
      @include radio-circle($radio-circle-size);
      border: 2px solid var(--steel-60);
      background: var(--steel-10);
    }

    // Внутренний круг радио-кнопки (точка)
    &:after {
      content: "";
      position: absolute;
      @include radio-circle($radio-dot-size);
      opacity: 0;
      transition: opacity 0.2s ease-in-out;
    }

    @each $color, $values in $radio-colors {
      &[data-color="#{$color}"] {
        // Базовое состояние (неотмеченное)
        &:before {
          border-color: map-get($values, border);
        }

        // Отмеченное состояние
        &:checked {
          &:before {
            border-color: map-get($values, border-checked);
          }

          &:after {
            background-color: map-get($values, dot);
            opacity: 1;
          }
        }

        // Стили при наведении для активной радио-кнопки
        &:not(:disabled) {
          &:hover {
            background: rgb(from var(--steel-90) r g b / 6%);
          }
        }

        // Стили для отключенной радио-кнопки с учетом цвета
        &:disabled {
          cursor: default;

          @if $color == "brand" {
            &:before {
              background-color: var(--steel-30);
              border-color: var(--steel-50);
            }

            &:checked {
              &:before {
                border-color: var(--brand-sapphire-60);
              }

              &:before,
              &:after {
                opacity: 0.5;
              }

              &:after {
                background-color: var(--brand-sapphire-60);
              }
            }
          } @else {
            &:before {
              background-color: var(--steel-30);
              border-color: map-get($values, border);
              opacity: 0.5;
            }

            &:checked {
              &:before {
                border-color: map-get($values, border);
              }

              &:after {
                background-color: map-get($values, dot);
                opacity: 0.5;
              }
            }
          }
        }
      }
    }
  }
}

.label {
  cursor: pointer;
  display: flex;
  align-items: center;
  padding: 5px;

  &-disabled {
    opacity: 0.5;
    pointer-events: none;
    cursor: default;
  }
}
