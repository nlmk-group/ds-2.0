@mixin nodeHoverEvent {
  background-color: var(--steel-30);
  cursor: pointer;
}

@mixin selected {
  background-color: var(--brand-sapphire-10);
}

@mixin selectedHover {
  background-color: var(--brand-sapphire-20);
}

.custom-rc-tree {
  height: 100%;
  width: 100%;

  :global(.rc-tree-node-content-wrapper) {
    width: 100%;
    & > div {
      background-color: var(--brand-sapphire-50) !important;
    }
  }

  :global(.rc-tree-treenode span.rc-tree-switcher) {
    background-image: none;
    display: none;
  }

  :global :global(.rc-tree .rc-tree-treenode .rc-tree-iconEle) {
    display: none;
  }

  :global(.rc-tree-treenode) {
    height: var(--row-height);
    overflow: hidden;
    display: flex;
    align-items: center;
    width: 100%;
  }

  :global(.rc-tree-treenode-selected) {
    background: var(--brand-sapphire-10);
  }

  :global(.rc-tree-treenode-selected-hover) {
    background: var(--brand-sapphire-20);
  }

  .node-content[data-disabled="true"] {
    opacity: 0.5 !important;
    cursor: default !important;
    pointer-events: none;
  }

  :global(.rc-tree-treenode .rc-tree-node-content-wrapper) {
    height: unset;
  }

  :global(.rc-tree-title) {
    width: 100%;
  }

  :global(.rc-tree-indent-unit) {
    width: 48px;
  }

  :global(.rc-tree-treenode.drop-target) {
    background-color: var(--brand-sapphire-20);
    color: var(--steel-40);
  }

  :global(.rc-tree .rc-tree-treenode.drop-container) {
    background-color: var(--brand-sapphire-30);
    color: var(--steel-30);
  }

  :global(.rc-tree-treenode.drop-container ~ .rc-tree-treenode) {
    border-left: none;
  }
}

.not-selectable {
  :global(.rc-tree-treenode .rc-tree-node-content-wrapper) {
    cursor: unset;
  }
}

.dragging {
  border: 3px solid var(--brand-sapphire-60) !important;
  background-color: var(--steel-30);
  transition: all 0.2s ease-in-out;
}

.node {
  &-title {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  &-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 24px;
    width: 100%;
    height: var(--row-height);
    padding: 0 10px;
    box-sizing: border-box;
    &[data-checked="true"] {
      background-color: inherit;
    }
  }
}

.switcher {
  display: inline-block;
  color: var(--steel-90);
  background: transparent;

  &-open {
    transform: rotate(90deg);
    padding-left: 0;
  }
}

.custom-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 16px;
  min-height: 16px;
}

:global(.rc-tree-treenode:hover) {
  @include nodeHoverEvent;
}

:global(.rc-tree-treenode:has([data-checked="true"]):hover) {
  @include selectedHover;
}

:global(.rc-tree-treenode:has([data-checked="true"])) {
  @include selected;
}

.custom-rc-tree.is-dragging {
  :global(.rc-tree-treenode),
  :global(.rc-tree-treenode:hover),
  :global(.rc-tree-treenode:has([data-checked="true"])),
  :global(.rc-tree-treenode:has([data-checked="true"]):hover) {
    background-color: transparent !important;
    background: none !important;
  }
}

:global(.rc-tree-dragging) {
  :global(.rc-tree-treenode),
  :global(.rc-tree-treenode:hover),
  :global(.rc-tree-treenode:has([data-checked="true"])),
  :global(.rc-tree-treenode:has([data-checked="true"]):hover) {
    background-color: transparent !important;
    background: none !important;
  }
}

:global(.rc-tree-treenode) {
  &:has([data-disabled="true"]) {
    cursor: default !important;
    pointer-events: none !important;

    &:hover {
      background-color: transparent !important;
      background: none !important;
    }
  }

  &:has([data-disable-draggable="true"]) {
    cursor: default !important;

    :global(.rc-tree-node-content-wrapper) {
      cursor: default !important;
    }
  }
}
